#!/usr/bin/env bash

set -e
tf_vars="./terraform/terraform.tfvars"

if [ ! -f $tf_vars ]; then
  echo "Creating Terraform variables file: $tf_vars"
  cat ./terraform/terraform.tfvars.example \
    | sed "s/PUT_ACCESS_KEY/$(echo $AWS_ACCESS_KEY_ID | sed 's/\//\\\//g')/g" \
    | sed "s/PUT_SECRET_KEY/$(echo $AWS_SECRET_ACCESS_KEY | sed 's/\//\\\//g')/g" \
    | sed "s/PUT_REGION/$(echo $AWS_REGION | sed 's/\//\\\//g')/g" \
   > $tf_vars
   cat $tf_vars
else
  echo "Terraform vars file already exists, skipping"
fi

pushd ./terraform
export S3_BUCKET_NAME="wireguard-bucket"

terraform init -input=false  \
    -backend-config="access_key=${AWS_ACCESS_KEY_ID}" \
    -backend-config="secret_key=${AWS_SECRET_ACCESS_KEY}" \
    -backend-config="region=${AWS_REGION}" \
    -backend-config="bucket=${S3_BUCKET_NAME}" -reconfigure 

terraform fmt
terraform destroy -input=false -auto-approve > /dev/null

echo "Deleting the S3 bucket"
export AWS_DEFAULT_REGION=$AWS_REGION
aws s3 rm s3://$S3_BUCKET_NAME --recursive
aws s3 rb s3://$S3_BUCKET_NAME
popd
